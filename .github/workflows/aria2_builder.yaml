name: Build aria2 Binaries

on:
  workflow_dispatch:
  #schedule:
  #  - cron: "0 21 * * 6"  # 09:00 PM UTC Every Saturday --> 02:45 AM Nepal Time Every Sunday
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    steps:        
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: main
   
      - name: Install build dependencies
        run: "\
          sudo apt-get update\n
          sudo apt install -y --ignore-missing --no-install-recommends \
          autoconf \
          automake \
          autotools-dev \
          autopoint \
          '*gnutls*' \
          libc-ares-dev \
          '*libaria*' \
          libcppunit-dev \
          libexpat1-dev \
          libgcrypt-dev \
          libgmp-dev \
          libgpg-error-dev \
          libsqlite3-dev \
          libssh2-1-dev \
          libssl-dev \
          libunistring-dev \
          libtool \
          libxml2-dev \
          nettle-dev \
          '*p11-kit*' \
          pkg-config \
          python3-pip \
          zlib1g-dev  \n
          pip3 install sphinx \n"
      
      - name: Install build dependencies for cross compile
        run: "\
          sudo apt-get update\n
          sudo apt-get install -y --no-install-recommends build-essential wget ca-certificates \
          file qemu-user-static \
          g++-aarch64-linux-gnu \
          g++-arm-linux-gnueabi \
          g++-arm-linux-gnueabihf \
          g++-i686-linux-gnu \
          g++-m68k-linux-gnu \
          g++-mips-linux-gnu \
          g++-mipsel-linux-gnu \
          g++-mips64-linux-gnuabi64 \
          g++-mips64el-linux-gnuabi64 \
          g++-powerpc-linux-gnu \
          g++-powerpc64-linux-gnu \
          g++-powerpc64le-linux-gnu \
          g++-riscv64-linux-gnu \
          g++-s390x-linux-gnu \
          g++-sh4-linux-gnu libc6-dev-sh4-cross\n"
          
      - name: Setup Env
        run: |
          # Create Output Dir
          mkdir -p "$GITHUB_WORKSPACE/main/aria2"
     
      - name: Build --> linux-arm64-aarch64-gcc       
        run: |
          # git clone
          cd $(mktemp -d) && git clone https://github.com/aria2/aria2
          # Mark Safe
          git config --global --add safe.directory $(pwd)
          # Build
          docker run --privileged -v $(pwd):/work dockcross/linux-arm64 bash -c "sudo apt install autoconf automake autotools-dev autopoint '*gnutls*' libc-ares-dev libcppunit-dev libexpat1-dev libgcrypt-dev libgmp-dev libgpg-error-dev libsqlite3-dev libssh2-1-dev libssl-dev libunistring-dev libtool libxml2-dev '*openssl*' nettle-dev '*p11-kit*' pkg-config python3-pip zlib1g-dev -y --ignore-missing --no-install-recommends ; pip3 install sphinx ; cd ./aria2 && autoreconf -i && ./configure --host=aarch64-linux-gnu --without-gnutls ARIA2_STATIC=yes && make -j$(($(nproc)+1)) ; echo -e '----------------' ; sudo chmod +xwr ./src/aria2c && ./src/aria2c --version "
          # Strip & Move
          sudo strip "./src/aria2c" && sudo chmod +xwr "./src/aria2c"
          sudo cp "./src/aria2c" "$GITHUB_WORKSPACE/main/aria2/aria2c_aarch64_arm64_Linux"    
          # Remove tmp files
          #rm -rf /tmp >/dev/null 2>&1
        continue-on-error: true
        
      - name: Build --> linux-arm64-aarch64-musl  
        run: | 
          # git clone
          cd $(mktemp -d) && git clone https://github.com/blechschmidt/massdns
          # Mark Safe
          git config --global --add safe.directory $(pwd)
          # Add static flag
          sed -i 's/$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(PROJECT_FLAGS) -O3 -std=c11 -DHAVE_EPOLL -DHAVE_SYSINFO -Wall -fstack-protector-strong src\/main.c/$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(PROJECT_FLAGS) -O3 -std=c11 -DHAVE_EPOLL -DHAVE_SYSINFO -Wall -fstack-protector-strong src\/main.c -s  -static/g' "./massdns/Makefile"
          # Build       
          docker run --privileged -v $(pwd):/work dockcross/linux-arm64-musl bash -c "git config --global --add safe.directory /work/massdns ; cd ./massdns && make -j$(($(nproc)+1)) ; echo && chmod +x ./bin/massdns && ./bin/massdns --help ; echo"
          sudo mv ./massdns/bin/massdns "$GITHUB_WORKSPACE/main/massdns/massdns_linux_arm64_aarch64_musl"  
          # Remove tmp files
          #rm -rf /tmp >/dev/null 2>&1          
        continue-on-error: true
   
   #Compiling for 32bit fails
   #   - name: Build --> linux-x86-gcc 
   #     run: |
   #       # git clone
   #       cd $(mktemp -d) && git clone https://github.com/blechschmidt/massdns
   #       # Mark Safe
   #       git config --global --add safe.directory $(pwd)
   #      # Add static flag
   #       sed -i 's/$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(PROJECT_FLAGS) -O3 -std=c11 -DHAVE_EPOLL -DHAVE_SYSINFO -Wall -fstack-protector-strong src\/main.c/$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(PROJECT_FLAGS) -O3 -std=c11 -DHAVE_EPOLL -DHAVE_SYSINFO -Wall -fstack-protector-strong src\/main.c -s  -static/g' "./massdns/Makefile"
    #      # Build
    #      docker run --privileged -v $(pwd):/work dockcross/linux-x86 bash -c "git config --global --add safe.directory /work/massdns ; cd ./massdns && make -j$(($(nproc)+1)) ; echo && chmod +x ./bin/massdns && ./bin/massdns --help ; echo"
    #      sudo mv ./massdns/bin/massdns "$GITHUB_WORKSPACE/main/massdns/massdns_linux_x86_gcc"    
    #      # Remove tmp files
    #      #rm -rf /tmp >/dev/null 2>&1          
    #    continue-on-error: true
        
      - name: Build --> linux-x86-64-gcc 
        run: | 
          # git clone
          cd $(mktemp -d) && git clone https://github.com/aria2/aria2
          # Mark Safe
          git config --global --add safe.directory $(pwd)        
          # Build
          cd ./aria2 && sudo autoreconf -i && sudo ./configure --without-gnutls ARIA2_STATIC=yes && sudo make -j$(($(nproc)+1))
          # Strip & Move
          sudo strip "./src/aria2c" && sudo chmod +xwr "./src/aria2c"
          sudo cp "./src/aria2c" "$GITHUB_WORKSPACE/main/aria2/aria2c_x86_64_Linux"    
          # Remove tmp files
          #rm -rf /tmp >/dev/null 2>&1        
        continue-on-error: true
        
      - name: Build --> linux-s390x-gcc
        run: |  
          # git clone
          cd $(mktemp -d) && git clone https://github.com/blechschmidt/massdns
          # Mark Safe
          git config --global --add safe.directory $(pwd)
          # Add static flag
          sed -i 's/$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(PROJECT_FLAGS) -O3 -std=c11 -DHAVE_EPOLL -DHAVE_SYSINFO -Wall -fstack-protector-strong src\/main.c/$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(PROJECT_FLAGS) -O3 -std=c11 -DHAVE_EPOLL -DHAVE_SYSINFO -Wall -fstack-protector-strong src\/main.c -s  -static/g' "./massdns/Makefile"
          # Build
          docker run --privileged -v $(pwd):/work dockcross/linux-s390x bash -c "git config --global --add safe.directory /work/massdns ; cd ./massdns && make -j$(($(nproc)+1)) ; echo && chmod +x ./bin/massdns && ./bin/massdns --help ; echo"
          sudo mv ./massdns/bin/massdns "$GITHUB_WORKSPACE/main/massdns/massdns_linux_s390x_gcc" 
          # Remove tmp files
          #rm -rf /tmp >/dev/null 2>&1           
        continue-on-error: true
        
      - name: Update README.md
        run: |  
           cd "$GITHUB_WORKSPACE/main"
           cat ./aria2/INFO.md > ./aria2/README.md
           echo -e "" >> ./aria2/README.md 
           echo '---' >> ./aria2/README.md
           echo '```console' >> ./aria2/README.md
           /bin/bash -c 'PS4="$ "; set -x; file ./aria2/aria2_*' &>> ./aria2/README.md
           echo -e "" >> ./aria2/README.md
           echo -e "--> SHA256SUM" >> ./aria2/README.md
           /bin/bash -c 'PS4="$ "; set -x; sha256sum ./aria2/aria2_*' &>> ./aria2/README.md   
           echo -e '```\n' >> ./aria2/README.md
           echo -e "" >> ./aria2/README.md
           echo '---' >> ./aria2/README.md
           echo -e "" >> ./aria2/README.md
           echo '- #### Sizes' >> ./aria2/README.md 
           echo -e "" >> ./aria2/README.md
           echo '```console' >> ./aria2/README.md       
           /bin/bash -c 'PS4="$ ";ls -lh ./aria2 | awk "{print \$5, \$9}" | column -t' &>> ./aria2/README.md
           echo '```' >> ./aria2/README.md     
           echo -e "" >> ./aria2/README.md
           echo '---' >> ./aria2/README.md
           echo -e "" >> ./aria2/README.md
        working-directory: main
        continue-on-error: true
        
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          repository: ./main        
          commit_user_name: Azathothas # defaults to "github-actions[bot]"
          commit_user_email: AjamX101@gmail.com # defaults to "41898282+github-actions[bot]@users.noreply.github.com"
          commit_message: Cross-Compile aria2 Binaries 
          #push_options: '--force'
